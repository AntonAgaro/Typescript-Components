(()=>{"use strict";var e={991:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(537),o=t.n(r),A=t(645),s=t.n(A)()(o());s.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap);"]),s.push([e.id,'*{padding:0;margin:0;box-sizing:border-box}html,body,#app{height:100%}html{font-size:16px}body{font-family:"Poppins",sans-serif;background:#4285f4}.container{margin:0 auto;max-width:1200px;padding:1rem}.component{margin-top:2rem}',"",{version:3,sources:["webpack://./src/app.scss"],names:[],mappings:"AAEA,EACE,SAAA,CACA,QAAA,CACA,qBAAA,CAGF,eACE,WAAA,CAGF,KACE,cAAA,CAGF,KACE,gCAAA,CACA,kBAAA,CAGF,WACE,aAAA,CACA,gBAAA,CACA,YAAA,CAGF,WACE,eAAA",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');\n\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nhtml, body, #app {\n  height: 100%;\n}\n\nhtml {\n  font-size: 16px;\n}\n\nbody {\n  font-family: 'Poppins', sans-serif;;\n  background: #4285f4;\n}\n\n.container {\n  margin: 0 auto;\n  max-width: 1200px;\n  padding: 1rem;\n}\n\n.component {\n  margin-top: 2rem;\n}"],sourceRoot:""}]);const i=s},49:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(537),o=t.n(r),A=t(645),s=t.n(A)()(o());s.push([e.id,".accordion__head{display:flex;align-items:center;width:100%;min-height:50px;padding:0 20px;border:1px solid rgba(0,0,0,.2);font-size:18px;cursor:pointer}.accordion__head--active{color:#0546e0}.accordion__content{max-height:0;opacity:0;overflow:hidden;transition:opacity .5s,max-height .6s,padding .1s;background:#fff;border:1px solid #000;border-top:none;border-radius:0 0 4px 4px}.accordion__content--active{opacity:1}.accordion__inner{display:block;padding:20px}","",{version:3,sources:["webpack://./src/components/accordion/accordion.scss"],names:[],mappings:"AACE,iBACE,YAAA,CACA,kBAAA,CACA,UAAA,CACA,eAAA,CACA,cAAA,CACA,+BAAA,CACA,cAAA,CACA,cAAA,CACA,yBACE,aAAA,CAIJ,oBACE,YAAA,CACA,SAAA,CACA,eAAA,CACA,iDAAA,CACA,eAAA,CACA,qBAAA,CACA,eAAA,CACA,yBAAA,CACA,4BACE,SAAA,CAIJ,kBACE,aAAA,CACA,YAAA",sourcesContent:[".accordion {\n  &__head {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    min-height: 50px;\n    padding: 0 20px;\n    border: 1px solid rgba(0,0,0, .2);\n    font-size: 18px;\n    cursor: pointer;\n    &--active {\n      color: #0546e0;\n    }\n  }\n\n  &__content {\n    max-height: 0;\n    opacity: 0;\n    overflow: hidden;\n    transition: opacity 0.5s, max-height 0.6s, padding 0.1s;\n    background: #fff;\n    border: 1px solid black;\n    border-top: none;\n    border-radius: 0 0 4px 4px;\n    &--active {\n      opacity: 1;\n    }\n  }\n\n  &__inner {\n    display: block;\n    padding: 20px;\n  }\n}"],sourceRoot:""}]);const i=s},253:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(537),o=t.n(r),A=t(645),s=t.n(A)()(o());s.push([e.id,".progress-wrapper{background:gray;border-radius:20px;height:30px;width:300px}.progress{display:flex;justify-content:center;align-items:center;background-image:repeating-linear-gradient(to left, #0546e0, #1172f9, #4892f9);box-shadow:0 5px 5px -6px #0546e0,0 3px 7px #1172f9;border-radius:20px;color:#fff;height:100%;width:0;transition:1s ease .3s}","",{version:3,sources:["webpack://./src/components/progressBar/progress-bar.scss"],names:[],mappings:"AAAA,kBACE,eAAA,CACA,kBAAA,CACA,WAAA,CACA,WAAA,CAGF,UACE,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,8EAAA,CACA,mDAAA,CACA,kBAAA,CACA,UAAA,CACA,WAAA,CACA,OAAA,CACA,sBAAA",sourcesContent:[".progress-wrapper {\n  background: grey;\n  border-radius: 20px;\n  height: 30px;\n  width: 300px;\n}\n\n.progress {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: repeating-linear-gradient(to left, #0546e0, #1172f9, #4892f9);\n  box-shadow: 0 5px 5px -6px #0546e0, 0 3px 7px #1172f9;\n  border-radius: 20px;\n  color: #fff;\n  height: 100%;\n  width: 0;\n  transition: 1s ease 0.3s;\n}"],sourceRoot:""}]);const i=s},665:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(537),o=t.n(r),A=t(645),s=t.n(A)()(o());s.push([e.id,'.select__wrapper{position:relative;margin:0 auto;width:370px}.select__btn{position:relative;display:block;width:100%;padding:20px;background:#fff;border:none;border-radius:6px;text-align:left;font-size:16px;line-height:20px;font-weight:600;cursor:pointer}.select__btn:focus,.select__btn.active{outline:none;box-shadow:0 0 0 4px rgba(176,198,225,.6)}.select__btn:after{content:"";position:absolute;top:50%;right:15px;transform:translateY(-50%);width:0;height:0;border-width:10.4px 6px 0 6px;border-color:#79849b rgba(0,0,0,0) rgba(0,0,0,0) rgba(0,0,0,0);border-style:solid;pointer-events:none}.select__list{display:none;position:absolute;left:0;top:70px;z-index:1;width:100%;list-style-type:none;background:#fff;box-shadow:0px 4px 8px rgba(176,198,225,.6);overflow:hidden;border-radius:6px}.select__list.active{display:block}.select__list-item{padding:8px;border:1px solid #7e9bbd;border-bottom:0;cursor:pointer}.select__list-item:first-child{border-radius:6px 6px 0 0}.select__list-item:last-child{border-bottom:1px solid #7e9bbd;border-radius:0 0 6px 6px}.select__list-item:hover{background:rgba(176,198,225,.26)}',"",{version:3,sources:["webpack://./src/components/select/select.scss"],names:[],mappings:"AACE,iBACE,iBAAA,CACA,aAAA,CACA,WAAA,CAGF,aACE,iBAAA,CACA,aAAA,CACA,UAAA,CACA,YAAA,CACA,eAAA,CACA,WAAA,CACA,iBAAA,CACA,eAAA,CACA,cAAA,CACA,gBAAA,CACA,eAAA,CACA,cAAA,CAEA,uCACE,YAAA,CACA,yCAAA,CAIF,mBACE,UAAA,CACA,iBAAA,CACA,OAAA,CACA,UAAA,CACA,0BAAA,CACA,OAAA,CACA,QAAA,CACA,6BAAA,CACA,8DAAA,CACA,kBAAA,CAEA,mBAAA,CAIJ,cACE,YAAA,CACA,iBAAA,CACA,MAAA,CACA,QAAA,CACA,SAAA,CACA,UAAA,CACA,oBAAA,CACA,eAAA,CACA,2CAAA,CACA,eAAA,CACA,iBAAA,CAEA,qBACE,aAAA,CAIJ,mBACE,WAAA,CACA,wBAAA,CACA,eAAA,CACA,cAAA,CAEA,+BACE,yBAAA,CAGF,8BACE,+BAAA,CACA,yBAAA,CAGF,yBACE,gCAAA",sourcesContent:[".select {\n  &__wrapper {\n    position: relative;\n    margin: 0 auto;\n    width: 370px;\n  }\n\n  &__btn {\n    position: relative;\n    display: block;\n    width: 100%;\n    padding: 20px;\n    background: #fff;\n    border: none;\n    border-radius: 6px;\n    text-align: left;\n    font-size: 16px;\n    line-height: 20px;\n    font-weight: 600;\n    cursor: pointer;\n\n    &:focus, &.active {\n      outline: none;\n      box-shadow: 0 0 0 4px rgba(176, 198, 225, 0.6);\n    }\n\n    //Triangle\n    &:after {\n      content: '';\n      position: absolute;\n      top: 50%;\n      right: 15px;\n      transform: translateY(-50%);\n      width: 0;\n      height: 0;\n      border-width: 10.4px 6px 0 6px;\n      border-color: #79849b transparent transparent transparent;\n      border-style: solid;\n      //remove click from triangle\n      pointer-events: none;\n    }\n  }\n\n  &__list {\n    display: none;\n    position: absolute;\n    left: 0;\n    top: 70px;\n    z-index: 1;\n    width: 100%;\n    list-style-type: none;\n    background: #fff;\n    box-shadow: 0px 4px 8px rgba(176, 198, 225, 0.6);\n    overflow: hidden;\n    border-radius: 6px;\n\n    &.active {\n      display: block;\n    }\n  }\n\n  &__list-item {\n    padding: 8px;\n    border: 1px solid #7e9bbd;\n    border-bottom: 0;\n    cursor: pointer;\n\n    &:first-child {\n      border-radius: 6px 6px 0 0;\n    }\n\n    &:last-child {\n      border-bottom: 1px solid #7e9bbd;\n      border-radius: 0 0 6px 6px;\n    }\n\n    &:hover {\n      background: rgba(176, 198, 225, 0.26);\n    }\n  }\n}\n"],sourceRoot:""}]);const i=s},304:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(537),o=t.n(r),A=t(645),s=t.n(A)()(o());s.push([e.id,'.switch{position:relative;display:inline-block;width:60px;height:34px}.switch .slider{position:absolute;top:0;left:0;right:0;bottom:0;cursor:pointer;background:#ccc;transition:all .4s;border-radius:34px}.switch .slider:before{content:"";position:absolute;height:26px;width:26px;left:4px;bottom:4px;background:#fff;transition:all .4s;border-radius:100%}.switch input{display:none}.switch input:checked+.slider{background:orange}.switch input:checked+.slider:before{transform:translateX(26px)}.switch input:focus+.slider{box-shadow:0 0 1px #2196f3}',"",{version:3,sources:["webpack://./src/components/switch/switch.scss"],names:[],mappings:"AAAA,QACE,iBAAA,CACA,oBAAA,CACA,UAAA,CACA,WAAA,CACA,gBACE,iBAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,QAAA,CACA,cAAA,CACA,eAAA,CACA,kBAAA,CACA,kBAAA,CAEA,uBACE,UAAA,CACA,iBAAA,CACA,WAAA,CACA,UAAA,CACA,QAAA,CACA,UAAA,CACA,eAAA,CACA,kBAAA,CACA,kBAAA,CAIJ,cACE,YAAA,CAEA,8BACE,iBAAA,CAGF,qCACE,0BAAA,CAGF,4BACE,0BAAA",sourcesContent:[".switch {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n  .slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    cursor: pointer;\n    background: #ccc;\n    transition: all 0.4s;\n    border-radius: 34px;\n\n    &:before {\n      content: '';\n      position: absolute;\n      height: 26px;\n      width: 26px;\n      left: 4px;\n      bottom: 4px;\n      background: white;\n      transition: all 0.4s;\n      border-radius: 100%;\n    }\n  }\n\n  input {\n    display: none;\n\n    &:checked + .slider {\n      background: orange;\n    }\n\n    &:checked + .slider:before {\n      transform: translateX(26px);\n    }\n\n    &:focus + .slider {\n      box-shadow: 0 0 1px #2196F3;\n    }\n  }\n\n\n}"],sourceRoot:""}]);const i=s},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,A){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(s[a]=!0)}for(var c=0;c<e.length;c++){var p=[].concat(e[c]);r&&s[p[0]]||(void 0!==A&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=A),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),n.push(p))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),A="/*# ".concat(o," */"),s=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(s).concat([A]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var A={},s=[],i=0;i<e.length;i++){var a=e[i],c=r.base?a[0]+r.base:a[0],p=A[c]||0,l="".concat(c," ").concat(p);A[c]=p+1;var d=t(l),C={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==d)n[d].references++,n[d].updater(C);else{var u=o(C,r);r.byIndex=i,n.splice(i,0,{identifier:l,updater:u,references:1})}s.push(l)}return s}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var A=r(e=e||[],o=o||{});return function(e){e=e||[];for(var s=0;s<A.length;s++){var i=t(A[s]);n[i].references--}for(var a=r(e,o),c=0;c<A.length;c++){var p=t(A[c]);0===n[p].references&&(n[p].updater(),n.splice(p,1))}A=a}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var A=n[r]={id:r,exports:{}};return e[r](A,A.exports,t),A.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),A=t(569),s=t.n(A),i=t(565),a=t.n(i),c=t(216),p=t.n(c),l=t(589),d=t.n(l),C=t(991),u={};u.styleTagTransform=d(),u.setAttributes=a(),u.insert=s().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=p(),n()(C.Z,u),C.Z&&C.Z.locals&&C.Z.locals;var h=t(665),f={};f.styleTagTransform=d(),f.setAttributes=a(),f.insert=s().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=p(),n()(h.Z,f),h.Z&&h.Z.locals&&h.Z.locals;var g=function(){function e(e){var n=this;if(this.settings=e,this.settings.wrapper){var t=this.settings.wrapper.querySelector(".select__btn"),r=this.settings.wrapper.querySelector(".select__list"),o=this.settings.wrapper.querySelectorAll(".select__list-item"),A=this.settings.wrapper.querySelector(".select__input");t.addEventListener("click",(function(){r.classList.toggle(n.settings.activeClass),t.classList.toggle(n.settings.activeClass)})),o.forEach((function(e){e.addEventListener("click",(function(e){e.stopPropagation();var o=e.target;t.textContent=o.textContent,A.value=o.dataset.value,r.classList.remove(n.settings.activeClass)}))})),document.addEventListener("click",(function(e){e.target!==t&&n.hideElements([t,r])})),document.addEventListener("keydown",(function(e){"Tab"!==e.key&&"Escape"!==e.key&&"Esc"!==e.key||n.hideElements([t,r])}))}}return e.prototype.hideElements=function(e){var n=this;e.forEach((function(e){return e.classList.remove(n.settings.activeClass)}))},e}(),b=t(253),x={};x.styleTagTransform=d(),x.setAttributes=a(),x.insert=s().bind(null,"head"),x.domAPI=o(),x.insertStyleElement=p(),n()(b.Z,x),b.Z&&b.Z.locals&&b.Z.locals;var m=function(e){if(this.settings=e,this.settings.progressWrapper){var n=this.settings.progressWrapper.querySelector(this.settings.progressSelector);if(n){var t=parseInt(this.settings.progressWrapper.dataset.progress)||0,r=parseInt(this.settings.progressWrapper.dataset.max)||100,o=Math.ceil(t/r*100);n.innerHTML=o+"%",n.style.width=o+"%"}}},v=t(49),y={};y.styleTagTransform=d(),y.setAttributes=a(),y.insert=s().bind(null,"head"),y.domAPI=o(),y.insertStyleElement=p(),n()(v.Z,y),v.Z&&v.Z.locals&&v.Z.locals;var w=function(e){this.settings=e;var n=this.settings,t=n.accordion,r=n.accordionHeadSelector,o=n.accordionContentActiveClass,A=n.accordionHeadActiveClass;t.querySelectorAll(r).forEach((function(e){e.addEventListener("click",(function(){var n=e.nextElementSibling;e.classList.toggle(A),n.classList.toggle(o),e.classList.contains(A)?n.style.maxHeight=n.scrollHeight+"px":n.style.maxHeight="0px"}))}))},E=function(e){var n,t,r=this;if(this.counterEl="string"==typeof e?this.counterEl=document.querySelector(e):e,this.counterEl){var o=this.counterEl.dataset.counterValue;if(o&&!isNaN(parseInt(o)))var A=Math.ceil(null!==(n=+o/+this.counterEl.dataset.counterStep)&&void 0!==n?n:200),s=0,i=setInterval((function(){r.counterEl.innerHTML=s.toString(),s>=+o?clearInterval(i):s+=A}),null!==(t=+this.counterEl.dataset.counterSpeed)&&void 0!==t?t:1)}},_=t(304),k={};k.styleTagTransform=d(),k.setAttributes=a(),k.insert=s().bind(null,"head"),k.domAPI=o(),k.insertStyleElement=p(),n()(_.Z,k),_.Z&&_.Z.locals&&_.Z.locals,window.addEventListener("DOMContentLoaded",(function(){document.querySelectorAll(".select__wrapper").forEach((function(e){new g({wrapper:e,selectBtnSelector:".select__btn",selectListSelector:".select__list",selectItemsSelector:".select__list-item",activeClass:"active"})})),document.querySelectorAll(".progress-wrapper").forEach((function(e){new m({progressWrapper:e,progressSelector:".progress"})})),document.querySelectorAll(".accordion").forEach((function(e){new w({accordion:e,accordionHeadSelector:".accordion__head",accordionHeadActiveClass:"accordion__head--active",accordionContentActiveClass:"accordion__content--active"})})),new E("#counter")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,